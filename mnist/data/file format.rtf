{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red37\green0\blue255;\red0\green0\blue0;\red255\green255\blue255;
}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c100000;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww16240\viewh13940\viewkind0
\deftab720
\pard\pardeftab720\sl440\sa298\partightenfactor0

\f0\b\fs36 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 FILE FORMATS FOR THE MNIST DATABASE\cf3 \strokec3 \
\pard\pardeftab720\sl280\partightenfactor0

\b0\fs24 \cf3 \cb4 The data is stored in a very simple file format designed for storing vectors and multidimensional matrices. General info on this format is given at the end of this page, but you don't need to read that to use the data files.\
\pard\pardeftab720\sl280\sa240\partightenfactor0
\cf3 \cb1 All the integers in the files are stored in the MSB first (high endian) format used by most non-Intel processors. Users of Intel processors and other low-endian machines must flip the bytes of the header.\
There are 4 files:\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f1 \cf3 train-images-idx3-ubyte: training set images
\f0 \'a0\uc0\u8232 
\f1 train-labels-idx1-ubyte: training set labels
\f0 \'a0\uc0\u8232 
\f1 t10k-images-idx3-ubyte:\'a0 test set images
\f0 \'a0\uc0\u8232 
\f1 t10k-labels-idx1-ubyte:\'a0 test set labels
\f0 \
The training set contains 60000 examples, and the test set 10000 examples.\
The first 5000 examples of the test set are taken from the original NIST training set. The last 5000 are taken from the original NIST test set. The first 5000 are cleaner and easier than the last 5000.\
\pard\pardeftab720\sl340\sa280\partightenfactor0

\b\fs28 \cf3 TRAINING SET LABEL FILE (train-labels-idx1-ubyte):\
\pard\pardeftab720\sl280\partightenfactor0

\f1\b0\fs24 \cf3 [offset] [type]\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 [value]\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 [description]
\f0 \cb4 \'a0\cb1 \

\f1 0000\'a0\'a0\'a0\'a0 32 bit integer\'a0 0x00000801(2049) magic number (MSB first)
\f0 \cb4 \'a0\cb1 \

\f1 0004\'a0\'a0\'a0\'a0 32 bit integer\'a0 60000\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 number of items
\f0 \cb4 \'a0\cb1 \

\f1 0008\'a0\'a0\'a0\'a0 unsigned byte\'a0\'a0 ??\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 label
\f0 \cb4 \'a0\cb1 \

\f1 0009\'a0\'a0\'a0\'a0 unsigned byte\'a0\'a0 ??\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 label
\f0 \cb4 \'a0\cb1 \

\f1 ........
\f0 \cb4 \'a0\cb1 \

\f1 xxxx\'a0\'a0\'a0\'a0 unsigned byte\'a0\'a0 ??\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 label\
\pard\pardeftab720\sl280\sa240\partightenfactor0
\cf3 The labels values are 0 to 9.
\f0 \
\pard\pardeftab720\sl340\sa280\partightenfactor0

\b\fs28 \cf3 TRAINING SET IMAGE FILE (train-images-idx3-ubyte):\
\pard\pardeftab720\sl280\partightenfactor0

\f1\b0\fs24 \cf3 [offset] [type]\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 [value]\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 [description]
\f0 \cb4 \'a0\cb1 \

\f1 0000\'a0\'a0\'a0\'a0 32 bit integer\'a0 0x00000803(2051) magic number
\f0 \cb4 \'a0\cb1 \

\f1 0004\'a0\'a0\'a0\'a0 32 bit integer\'a0 60000\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 number of images
\f0 \cb4 \'a0\cb1 \

\f1 0008\'a0\'a0\'a0\'a0 32 bit integer\'a0 28\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 number of rows
\f0 \cb4 \'a0\cb1 \

\f1 0012\'a0\'a0\'a0\'a0 32 bit integer\'a0 28\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 number of columns
\f0 \cb4 \'a0\cb1 \

\f1 0016\'a0\'a0\'a0\'a0 unsigned byte\'a0\'a0 ??\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 pixel
\f0 \cb4 \'a0\cb1 \

\f1 0017\'a0\'a0\'a0\'a0 unsigned byte\'a0\'a0 ??\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 pixel
\f0 \cb4 \'a0\cb1 \

\f1 ........
\f0 \cb4 \'a0\cb1 \

\f1 xxxx\'a0\'a0\'a0\'a0 unsigned byte\'a0\'a0 ??\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 pixel\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f0 \cf3 Pixels are organized row-wise. Pixel values are 0 to 255. 0 means background (white), 255 means foreground (black).\
\pard\pardeftab720\sl340\sa280\partightenfactor0

\b\fs28 \cf3 TEST SET LABEL FILE (t10k-labels-idx1-ubyte):\
\pard\pardeftab720\sl280\partightenfactor0

\f1\b0\fs24 \cf3 [offset] [type]\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 [value]\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 [description]
\f0 \cb4 \'a0\cb1 \

\f1 0000\'a0\'a0\'a0\'a0 32 bit integer\'a0 0x00000801(2049) magic number (MSB first)
\f0 \cb4 \'a0\cb1 \

\f1 0004\'a0\'a0\'a0\'a0 32 bit integer\'a0 10000\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 number of items
\f0 \cb4 \'a0\cb1 \

\f1 0008\'a0\'a0\'a0\'a0 unsigned byte\'a0\'a0 ??\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 label
\f0 \cb4 \'a0\cb1 \

\f1 0009\'a0\'a0\'a0\'a0 unsigned byte\'a0\'a0 ??\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 label
\f0 \cb4 \'a0\cb1 \

\f1 ........
\f0 \cb4 \'a0\cb1 \

\f1 xxxx\'a0\'a0\'a0\'a0 unsigned byte\'a0\'a0 ??\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 label\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f0 \cf3 The labels values are 0 to 9.\
\pard\pardeftab720\sl340\sa280\partightenfactor0

\b\fs28 \cf3 TEST SET IMAGE FILE (t10k-images-idx3-ubyte):\
\pard\pardeftab720\sl280\partightenfactor0

\f1\b0\fs24 \cf3 [offset] [type]\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 [value]\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 [description]
\f0 \cb4 \'a0\cb1 \

\f1 0000\'a0\'a0\'a0\'a0 32 bit integer\'a0 0x00000803(2051) magic number
\f0 \cb4 \'a0\cb1 \

\f1 0004\'a0\'a0\'a0\'a0 32 bit integer\'a0 10000\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 number of images
\f0 \cb4 \'a0\cb1 \

\f1 0008\'a0\'a0\'a0\'a0 32 bit integer\'a0 28\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 number of rows
\f0 \cb4 \'a0\cb1 \

\f1 0012\'a0\'a0\'a0\'a0 32 bit integer\'a0 28\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 number of columns
\f0 \cb4 \'a0\cb1 \

\f1 0016\'a0\'a0\'a0\'a0 unsigned byte\'a0\'a0 ??\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 pixel
\f0 \cb4 \'a0\cb1 \

\f1 0017\'a0\'a0\'a0\'a0 unsigned byte\'a0\'a0 ??\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 pixel
\f0 \cb4 \'a0\cb1 \

\f1 ........
\f0 \cb4 \'a0\cb1 \

\f1 xxxx\'a0\'a0\'a0\'a0 unsigned byte\'a0\'a0 ??\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 pixel\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f0 \cf3 Pixels are organized row-wise. Pixel values are 0 to 255. 0 means background (white), 255 means foreground (black).\'a0\uc0\u8232 \'a0\'a0\u8232 \
\pard\pardeftab720\sl280\sa120\partightenfactor0
\cf3 \
\pard\pardeftab720\sl440\sa298\partightenfactor0

\b\fs36 \cf2 \strokec2 THE IDX FILE FORMAT\cf3 \strokec3 \
\pard\pardeftab720\sl280\partightenfactor0

\b0\fs24 \cf3 \cb4 the IDX file format is a simple format for vectors and multidimensional matrices of various numerical types.\
\pard\pardeftab720\sl280\sa240\partightenfactor0
\cf3 \cb1 The basic format is\
\pard\pardeftab720\sl280\sa240\partightenfactor0

\f1 \cf3 magic number
\f0 \'a0\uc0\u8232 
\f1 size in dimension 0
\f0 \'a0\uc0\u8232 
\f1 size in dimension 1
\f0 \'a0\uc0\u8232 
\f1 size in dimension 2
\f0 \'a0\uc0\u8232 
\f1 .....
\f0 \'a0\uc0\u8232 
\f1 size in dimension N
\f0 \'a0\uc0\u8232 
\f1 data
\f0 \
The magic number is an integer (MSB first). The first 2 bytes are always 0.\
The third byte codes the type of the data:\'a0\uc0\u8232 0x08: unsigned byte\'a0\u8232 0x09: signed byte\'a0\u8232 0x0B: short (2 bytes)\'a0\u8232 0x0C: int (4 bytes)\'a0\u8232 0x0D: float (4 bytes)\'a0\u8232 0x0E: double (8 bytes)\
The 4-th byte codes the number of dimensions of the vector/matrix: 1 for vectors, 2 for matrices....\
The sizes in each dimension are 4-byte integers (MSB first, high endian, like in most non-Intel processors).\
The data is stored like in a C array, i.e. the index in the last dimension changes the fastest.\'a0\
}